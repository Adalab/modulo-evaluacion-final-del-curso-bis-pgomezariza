{"ast":null,"code":"import _slicedToArray from\"/Users/pgomezariza/code/github.com/Adalab/MODULO 3/modulo-3-evaluacion-final-pgomezariza/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{Routes,Route}from'react-router-dom';import{matchPath,useLocation}from'react-router';import getApiData from'../services/moviesApi';import localStorage from'../services/localStorage';import MovieSceneList from'./MovieSceneList';import Filters from'./Filters';import MovieSceneDetail from'./MovieSceneDetail';import'../styles/App.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(localStorage.get('movies',[])),_useState2=_slicedToArray(_useState,2),dataMovies=_useState2[0],setDataMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filterMovie=_useState4[0],setFilterMovie=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),filterYears=_useState6[0],setFilterYear=_useState6[1];useEffect(function(){console.log(dataMovies);if(dataMovies.length===0){getApiData().then(function(dataClean){console.log(dataClean);setDataMovies(dataClean);});}});useEffect(function(){localStorage.set('movies',dataMovies);},[dataMovies]);var handleFilterMovie=function handleFilterMovie(value){setFilterMovie(value);};var handleFilterYear=function handleFilterYear(value){setFilterYear(value);};var movieFilters=dataMovies.filter(function(item){return item.title.toLowerCase().includes(filterMovie.toLowerCase());}).filter(function(item){if(filterYears.length===0){return true;}else{return filterYears.includes(item.year);}});var getYear=function getYear(){var movieYears=dataMovies.map(function(movie){return movie.year;});var uniqueYear=movieYears.filter(function(year,index){return movieYears.indexOf(year)===index;});return uniqueYear;};var _useLocation=useLocation(),pathname=_useLocation.pathname;var dataPath=matchPath('/movie/:id',pathname);var movieId=dataPath!==null?dataPath.params.id:null;var movieFound=movieFilters.find(function(item){return item.id===parseInt(movieId);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Owen Wilson WOW\"}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Filters,{handleFilterMovie:handleFilterMovie,filterMovie:filterMovie,handleFilterYear:handleFilterYear,years:getYear()}),/*#__PURE__*/_jsx(MovieSceneList,{movies:movieFilters})]})}),/*#__PURE__*/_jsx(Route,{path:\"/movie/:id\",element:/*#__PURE__*/_jsx(MovieSceneDetail,{user:movieFound})})]})]});};export default App;","map":{"version":3,"sources":["/Users/pgomezariza/code/github.com/Adalab/MODULO 3/modulo-3-evaluacion-final-pgomezariza/src/components/App.js"],"names":["useState","useEffect","Routes","Route","matchPath","useLocation","getApiData","localStorage","MovieSceneList","Filters","MovieSceneDetail","App","get","dataMovies","setDataMovies","filterMovie","setFilterMovie","filterYears","setFilterYear","console","log","length","then","dataClean","set","handleFilterMovie","value","handleFilterYear","movieFilters","filter","item","title","toLowerCase","includes","year","getYear","movieYears","map","movie","uniqueYear","index","indexOf","pathname","dataPath","movieId","params","id","movieFound","find","parseInt"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,kBAA9B,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,cAAvC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CAGA,MAAO,oBAAP,C,6IAGA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAoCX,QAAQ,CAACO,YAAY,CAACK,GAAb,CAAiB,QAAjB,CAA2B,EAA3B,CAAD,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eACA,eAAsCd,QAAQ,CAAC,EAAD,CAA9C,yCAAOe,WAAP,eAAoBC,cAApB,eACA,eAAqChB,QAAQ,CAAC,EAAD,CAA7C,yCAAOiB,WAAP,eAAoBC,aAApB,eAEAjB,SAAS,CAAC,UAAM,CACdkB,OAAO,CAACC,GAAR,CAAYP,UAAZ,EACA,GAAIA,UAAU,CAACQ,MAAX,GAAsB,CAA1B,CAA6B,CAC3Bf,UAAU,GAAGgB,IAAb,CAAkB,SAACC,SAAD,CAAe,CAC/BJ,OAAO,CAACC,GAAR,CAAYG,SAAZ,EACAT,aAAa,CAACS,SAAD,CAAb,CACD,CAHD,EAID,CACF,CARQ,CAAT,CAUAtB,SAAS,CAAC,UAAM,CACdM,YAAY,CAACiB,GAAb,CAAiB,QAAjB,CAA2BX,UAA3B,EACD,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA,GAAMY,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnCV,cAAc,CAACU,KAAD,CAAd,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACD,KAAD,CAAW,CAClCR,aAAa,CAACQ,KAAD,CAAb,CACD,CAFD,CAIA,GAAME,CAAAA,YAAY,CAAGf,UAAU,CAC5BgB,MADkB,CACX,SAACC,IAAD,CAAU,CAChB,MAAOA,CAAAA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,WAAW,CAACiB,WAAZ,EAAlC,CAAP,CACD,CAHkB,EAIlBH,MAJkB,CAIX,SAACC,IAAD,CAAU,CAChB,GAAIb,WAAW,CAACI,MAAZ,GAAuB,CAA3B,CAA8B,CAC5B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAOJ,CAAAA,WAAW,CAACgB,QAAZ,CAAqBH,IAAI,CAACI,IAA1B,CAAP,CACD,CACF,CAVkB,CAArB,CAYA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,UAAU,CAAGvB,UAAU,CAACwB,GAAX,CAAe,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACJ,IAAjB,EAAf,CAAnB,CACA,GAAMK,CAAAA,UAAU,CAAGH,UAAU,CAACP,MAAX,CAAkB,SAACK,IAAD,CAAOM,KAAP,CAAiB,CACpD,MAAOJ,CAAAA,UAAU,CAACK,OAAX,CAAmBP,IAAnB,IAA6BM,KAApC,CACD,CAFkB,CAAnB,CAGA,MAAOD,CAAAA,UAAP,CACD,CAND,CAQA,iBAAqBlC,WAAW,EAAhC,CAAQqC,QAAR,cAAQA,QAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGvC,SAAS,CAAC,YAAD,CAAesC,QAAf,CAA1B,CAEA,GAAME,CAAAA,OAAO,CAAGD,QAAQ,GAAK,IAAb,CAAoBA,QAAQ,CAACE,MAAT,CAAgBC,EAApC,CAAyC,IAAzD,CACA,GAAMC,CAAAA,UAAU,CAAGnB,YAAY,CAACoB,IAAb,CAAkB,SAAClB,IAAD,QAAUA,CAAAA,IAAI,CAACgB,EAAL,GAAYG,QAAQ,CAACL,OAAD,CAA9B,EAAlB,CAAnB,CAEA,mBACE,wCACE,WAAI,SAAS,CAAC,OAAd,6BADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAC,GADP,CAEE,OAAO,cACL,wCACE,KAAC,OAAD,EACE,iBAAiB,CAAEnB,iBADrB,CAEE,WAAW,CAAEV,WAFf,CAGE,gBAAgB,CAAEY,gBAHpB,CAIE,KAAK,CAAEQ,OAAO,EAJhB,EADF,cAOE,KAAC,cAAD,EAAgB,MAAM,CAAEP,YAAxB,EAPF,GAHJ,EADF,cAgBE,KAAC,KAAD,EACE,IAAI,CAAC,YADP,CAEE,OAAO,cAAE,KAAC,gBAAD,EAAkB,IAAI,CAAEmB,UAAxB,EAFX,EAhBF,GAFF,GADF,CA0BD,EAED,cAAepC,CAAAA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { matchPath, useLocation } from 'react-router';\n\nimport getApiData from '../services/moviesApi';\nimport localStorage from '../services/localStorage';\n\nimport MovieSceneList from './MovieSceneList';\nimport Filters from './Filters';\nimport MovieSceneDetail from './MovieSceneDetail';\n\n\nimport '../styles/App.scss';\n\n\nfunction App() {\n  const [dataMovies, setDataMovies] = useState(localStorage.get('movies', []));\n  const [filterMovie, setFilterMovie] = useState('');\n  const [filterYears, setFilterYear] = useState('');\n\n  useEffect(() => {\n    console.log(dataMovies)\n    if (dataMovies.length === 0) {\n      getApiData().then((dataClean) => {\n        console.log(dataClean)\n        setDataMovies(dataClean);\n      });\n    }\n  }, );\n\n  useEffect(() => {\n    localStorage.set('movies', dataMovies);\n  }, [dataMovies]); \n\n  const handleFilterMovie = (value) => {\n    setFilterMovie(value);\n  };\n\n  const handleFilterYear = (value) => {\n    setFilterYear(value);\n  };\n\n  const movieFilters = dataMovies\n    .filter((item) => {\n      return item.title.toLowerCase().includes(filterMovie.toLowerCase());\n    })\n    .filter((item) => {\n      if (filterYears.length === 0) {\n        return true;\n      } else {\n        return filterYears.includes(item.year);\n      }\n    });\n\n  const getYear = () => {\n    const movieYears = dataMovies.map((movie) => movie.year);\n    const uniqueYear = movieYears.filter((year, index) => {\n      return movieYears.indexOf(year) === index;\n    });\n    return uniqueYear;\n  };\n\n  const { pathname } = useLocation();\n  const dataPath = matchPath('/movie/:id', pathname);\n\n  const movieId = dataPath !== null ? dataPath.params.id : null;\n  const movieFound = movieFilters.find((item) => item.id === parseInt(movieId));\n\n  return (\n    <>\n      <h1 className=\"title\">Owen Wilson WOW</h1>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <>\n              <Filters\n                handleFilterMovie={handleFilterMovie}\n                filterMovie={filterMovie}\n                handleFilterYear={handleFilterYear}\n                years={getYear()}\n              />\n              <MovieSceneList movies={movieFilters} />\n\n            </>\n          }\n        />\n        <Route\n          path=\"/movie/:id\"\n          element={<MovieSceneDetail user={movieFound} />}\n        />\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}